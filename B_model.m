function B=B_model(q)

q1=q(1);
q2=q(2);
q3=q(3);
q4=q(4);
q5=q(5);
q6=q(6);
q7=q(7);

c1=cos(q1);
c2=cos(q2);
c3=cos(q3);
c4=cos(q4);
c5=cos(q5);
c6=cos(q6);
c7=cos(q7);

s1=sin(q1);
s2=sin(q2);
s3=sin(q3);
s4=sin(q4);
s5=sin(q5);
s6=sin(q6);
s7=sin(q7);

ml1=3.4525; Im1=0.0001;
Il1=[0.02183  ,0         ,        0;
    0        ,0.007703  ,-0.003887;
    0        ,-0.003887 ,  0.02083];
    

ml2=3.4821;   Im2=0.0001;
Il2=[0.02076    ,0       ,-0.003626;
    0          ,0.02179 ,        0;
    -0.003626  ,0       ,  0.00779];

ml3=4.05623;  Im3=0.0001;
Il3=[0.03204     ,0        ,0;
    0           ,0.00972  ,0.006227;
    0           ,0.006227 ,0.03042];

ml4=3.4822;  Im4=0.0001;
Il4=[0.02178   ,0         ,0;
    0         ,0.02075   ,-0.003625;
    0         ,-0.003625 ,0.007785];

ml5=2.1633;  Im5=0.0001;
Il5=[0.01287    ,0         ,0;
    0          ,0.005708  ,-0.003946;
    0          ,-0.003946 ,0.01112];

ml6=2.3466;  Im6=0.0001;
Il6=[0.006509,     0        , 0;
    0,            0.006259 , 0.00031891;
    0,            0.00031891, 0.004527];

ml7=3.129;  Im7=0.0001;
Il7=[0.01464    ,0.0005912    ,0;
    0.0005912  ,0.01465      ,0;
    0          ,0            ,0.002872];  

kr1=150;kr2=150;kr3=150;kr4=150;kr5=150;kr6=150;kr7=150;
d0=0.34; d3=0.4; d5=0.4; d7=0.126;
mm1=0; mm2=0; mm3=0; mm4=0; mm5=0; mm6=0; mm7=0;
B=zeros(7,7);


B(1,1)=Il1(3,3) + Il2(3,3) + Il3(3,3) + Il4(3,3) + Il5(3,3) + Il6(3,3) + Il7(3,3) + Im2 + Im3 + Im4 + Im5 + Im6 + Im7 + ml6*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4)^2 + ml4*(d3*s1*s2 + (d5*c4*s1*s2)/4 - (d5*c1*s3*s4)/4 - (d5*c2*c3*s1*s4)/4)^2 + ml5*(d3*s1*s2 + (5*d5*c4*s1*s2)/4 - (5*d5*c1*s3*s4)/4 - (5*d5*c2*c3*s1*s4)/4)^2 + mm6*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4)^2 + mm7*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4)^2 + mm5*(d3*s1*s2 + (d5*c4*s1*s2)/2 - (d5*c1*s3*s4)/2 - (d5*c2*c3*s1*s4)/2)^2 + ml7*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - d3*s1*s2)^2 + Im1*kr1^2 + ml7*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8 + d3*c1*s2)^2 + ml6*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4)^2 + ml4*(d3*c1*s2 + (d5*c1*c4*s2)/4 + (d5*s1*s3*s4)/4 - (d5*c1*c2*c3*s4)/4)^2 + ml5*(d3*c1*s2 + (5*d5*c1*c4*s2)/4 + (5*d5*s1*s3*s4)/4 - (5*d5*c1*c2*c3*s4)/4)^2 + mm6*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4)^2 + mm7*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4)^2 + mm5*(d3*c1*s2 + (d5*c1*c4*s2)/2 + (d5*s1*s3*s4)/2 - (d5*c1*c2*c3*s4)/2)^2 + (d3^2*ml2*c1^2*s2^2)/16 + (25*d3^2*ml3*c1^2*s2^2)/16 + (d3^2*mm3*c1^2*s2^2)/4 + d3^2*mm4*c1^2*s2^2 + (d3^2*ml2*s1^2*s2^2)/16 + (25*d3^2*ml3*s1^2*s2^2)/16 + (d3^2*mm3*s1^2*s2^2)/4 + d3^2*mm4*s1^2*s2^2;
B(2,1)=Il2(2,3)*c1 + Il3(2,3)*c1 + Il4(2,3)*c1 + Il5(2,3)*c1 + Il6(2,3)*c1 + Il7(2,3)*c1 - Il2(1,3)*s1 - Il3(1,3)*s1 - Il4(1,3)*s1 - Il5(1,3)*s1 - Il6(1,3)*s1 - Il7(1,3)*s1 + ml6*s1*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) + ml4*s1*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4)*(d3*c1*s2 + (d5*c1*c4*s2)/4 + (d5*s1*s3*s4)/4 - (d5*c1*c2*c3*s4)/4) + ml5*s1*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4)*(d3*c1*s2 + (5*d5*c1*c4*s2)/4 + (5*d5*s1*s3*s4)/4 - (5*d5*c1*c2*c3*s4)/4) + mm6*s1*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) + mm7*s1*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) + mm5*s1*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2)*(d3*c1*s2 + (d5*c1*c4*s2)/2 + (d5*s1*s3*s4)/2 - (d5*c1*c2*c3*s4)/2) - ml6*c1*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) - ml4*c1*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4)*(d3*s1*s2 + (d5*c4*s1*s2)/4 - (d5*c1*s3*s4)/4 - (d5*c2*c3*s1*s4)/4) - ml5*c1*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4)*(d3*s1*s2 + (5*d5*c4*s1*s2)/4 - (5*d5*c1*s3*s4)/4 - (5*d5*c2*c3*s1*s4)/4) - mm6*c1*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) - mm7*c1*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) - mm5*c1*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2)*(d3*s1*s2 + (d5*c4*s1*s2)/2 - (d5*c1*s3*s4)/2 - (d5*c2*c3*s1*s4)/2) + ml7*s1*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8 + d3*c1*s2) + ml7*c1*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - d3*s1*s2);
B(3,1)=Im3*kr3 + Il3(3,3)*c2 + Il4(3,3)*c2 + Il5(3,3)*c2 + Il6(3,3)*c2 + Il7(3,3)*c2 + Im4*c2 + Im5*c2 + Im6*c2 + Im7*c2 + ml7*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - d3*s1*s2)*(d5*c3*s1*s4 + d5*c1*c2*s3*s4 + (9*d7*c3*c6*s1*s4)/8 + (9*d7*s1*s3*s5*s6)/8 + (9*d7*c1*c2*c6*s3*s4)/8 - (9*d7*c1*c2*c3*s5*s6)/8 - (9*d7*c3*c4*c5*s1*s6)/8 - (9*d7*c1*c2*c4*c5*s3*s6)/8) + Il3(1,3)*c1*s2 + Il4(1,3)*c1*s2 + Il5(1,3)*c1*s2 + Il6(1,3)*c1*s2 + Il7(1,3)*c1*s2 + Il3(2,3)*s1*s2 + Il4(2,3)*s1*s2 + Il5(2,3)*s1*s2 + Il6(2,3)*s1*s2 + Il7(2,3)*s1*s2 - ml7*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8 + d3*c1*s2)*(d5*c1*c3*s4 + (9*d7*c1*c3*c6*s4)/8 - d5*c2*s1*s3*s4 + (9*d7*c1*s3*s5*s6)/8 - (9*d7*c2*c6*s1*s3*s4)/8 + (9*d7*c2*c3*s1*s5*s6)/8 - (9*d7*c1*c3*c4*c5*s6)/8 + (9*d7*c2*c4*c5*s1*s3*s6)/8) - d5*ml6*s4*(c1*c3 - c2*s1*s3)*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) - (d5*ml4*s4*(c1*c3 - c2*s1*s3)*(d3*c1*s2 + (d5*c1*c4*s2)/4 + (d5*s1*s3*s4)/4 - (d5*c1*c2*c3*s4)/4))/4 - (5*d5*ml5*s4*(c1*c3 - c2*s1*s3)*(d3*c1*s2 + (5*d5*c1*c4*s2)/4 + (5*d5*s1*s3*s4)/4 - (5*d5*c1*c2*c3*s4)/4))/4 - d5*mm6*s4*(c1*c3 - c2*s1*s3)*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) - d5*mm7*s4*(c1*c3 - c2*s1*s3)*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) - (d5*mm5*s4*(c1*c3 - c2*s1*s3)*(d3*c1*s2 + (d5*c1*c4*s2)/2 + (d5*s1*s3*s4)/2 - (d5*c1*c2*c3*s4)/2))/2 - d5*ml6*s4*(c3*s1 + c1*c2*s3)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) - (d5*ml4*s4*(c3*s1 + c1*c2*s3)*(d3*s1*s2 + (d5*c4*s1*s2)/4 - (d5*c1*s3*s4)/4 - (d5*c2*c3*s1*s4)/4))/4 - (5*d5*ml5*s4*(c3*s1 + c1*c2*s3)*(d3*s1*s2 + (5*d5*c4*s1*s2)/4 - (5*d5*c1*s3*s4)/4 - (5*d5*c2*c3*s1*s4)/4))/4 - d5*mm6*s4*(c3*s1 + c1*c2*s3)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) - d5*mm7*s4*(c3*s1 + c1*c2*s3)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) - (d5*mm5*s4*(c3*s1 + c1*c2*s3)*(d3*s1*s2 + (d5*c4*s1*s2)/2 - (d5*c1*s3*s4)/2 - (d5*c2*c3*s1*s4)/2))/2;
B(4,1)=Il4(1,3)*(c3*s1 + c1*c2*s3) + Il5(1,3)*(c3*s1 + c1*c2*s3) + Il6(1,3)*(c3*s1 + c1*c2*s3) + Il7(1,3)*(c3*s1 + c1*c2*s3) - Il4(2,3)*(c1*c3 - c2*s1*s3) - Il5(2,3)*(c1*c3 - c2*s1*s3) - Il6(2,3)*(c1*c3 - c2*s1*s3) - Il7(2,3)*(c1*c3 - c2*s1*s3) - ml7*((c1*c3 - c2*s1*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4)))*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - d3*s1*s2) - ml6*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) - ml4*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4)*(d3*c1*s2 + (d5*c1*c4*s2)/4 + (d5*s1*s3*s4)/4 - (d5*c1*c2*c3*s4)/4) - ml5*((5*d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4)*(d3*c1*s2 + (5*d5*c1*c4*s2)/4 + (5*d5*s1*s3*s4)/4 - (5*d5*c1*c2*c3*s4)/4) - mm6*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) - mm7*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) - mm5*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/2)*(d3*c1*s2 + (d5*c1*c4*s2)/2 + (d5*s1*s3*s4)/2 - (d5*c1*c2*c3*s4)/2) + ml4*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4)*(d3*s1*s2 + (d5*c4*s1*s2)/4 - (d5*c1*s3*s4)/4 - (d5*c2*c3*s1*s4)/4) + ml5*((5*d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4)*(d3*s1*s2 + (5*d5*c4*s1*s2)/4 - (5*d5*c1*s3*s4)/4 - (5*d5*c2*c3*s1*s4)/4) + mm5*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/2)*(d3*s1*s2 + (d5*c4*s1*s2)/2 - (d5*c1*s3*s4)/2 - (d5*c2*c3*s1*s4)/2) - Il4(3,3)*s2*s3 - Il5(3,3)*s2*s3 - Il6(3,3)*s2*s3 - Il7(3,3)*s2*s3 - Im5*s2*s3 - Im6*s2*s3 - Im7*s2*s3 - ml7*((c3*s1 + c1*c2*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8))*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8 + d3*c1*s2) + d5*ml6*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) + d5*mm6*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) + d5*mm7*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4);
B(5,1)=Il5(3,3)*(c2*c4 + c3*s2*s4) + Il6(3,3)*(c2*c4 + c3*s2*s4) + Il7(3,3)*(c2*c4 + c3*s2*s4) + Im6*(c2*c4 + c3*s2*s4) + Im7*(c2*c4 + c3*s2*s4) + Im5*kr5 + Il5(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) + Il6(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) + Il7(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il5(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - Il6(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - Il7(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - (9*d7*ml7*s6*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8 + d3*c1*s2)*(c2*c5*s1*s3 - c1*c3*c5 + c1*c4*s3*s5 + s1*s2*s4*s5 + c2*c3*c4*s1*s5))/8 - (9*d7*ml7*s6*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - d3*s1*s2)*(c3*c5*s1 + c1*c2*c5*s3 + c1*s2*s4*s5 - c4*s1*s3*s5 + c1*c2*c3*c4*s5))/8;
B(6,1)=Il6(1,3)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) - Il7(3,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Im7*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(3,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) + Il7(1,3)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) - Il6(2,3)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3)) - Il7(2,3)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3)) + ml7*((9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 + (9*d7*(s5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) + c5*(c3*s1 + c1*c2*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8 + d3*c1*s2) + ml7*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 - (9*d7*(s5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) - c5*(c1*c3 - c2*s1*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - d3*s1*s2);
B(7,1)=Im7*kr7 + Il7(1,3)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(2,3)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(3,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4));
B(1,2)=Il2(2,3)*c1 + Il3(2,3)*c1 + Il4(2,3)*c1 + Il5(2,3)*c1 + Il6(2,3)*c1 + Il7(2,3)*c1 - Il2(1,3)*s1 - Il3(1,3)*s1 - Il4(1,3)*s1 - Il5(1,3)*s1 - Il6(1,3)*s1 - Il7(1,3)*s1 + ml6*s1*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) + ml4*s1*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4)*(d3*c1*s2 + (d5*c1*c4*s2)/4 + (d5*s1*s3*s4)/4 - (d5*c1*c2*c3*s4)/4) + ml5*s1*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4)*(d3*c1*s2 + (5*d5*c1*c4*s2)/4 + (5*d5*s1*s3*s4)/4 - (5*d5*c1*c2*c3*s4)/4) + mm6*s1*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) + mm7*s1*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) + mm5*s1*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2)*(d3*c1*s2 + (d5*c1*c4*s2)/2 + (d5*s1*s3*s4)/2 - (d5*c1*c2*c3*s4)/2) - ml6*c1*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) - ml4*c1*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4)*(d3*s1*s2 + (d5*c4*s1*s2)/4 - (d5*c1*s3*s4)/4 - (d5*c2*c3*s1*s4)/4) - ml5*c1*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4)*(d3*s1*s2 + (5*d5*c4*s1*s2)/4 - (5*d5*c1*s3*s4)/4 - (5*d5*c2*c3*s1*s4)/4) - mm6*c1*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) - mm7*c1*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) - mm5*c1*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2)*(d3*s1*s2 + (d5*c4*s1*s2)/2 - (d5*c1*s3*s4)/2 - (d5*c2*c3*s1*s4)/2) + ml7*s1*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8 + d3*c1*s2) + ml7*c1*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - d3*s1*s2);
B(2,2)=ml6*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4)^2 + ml4*(d3*s2 + (d5*c4*s2)/4 - (d5*c2*c3*s4)/4)^2 + ml5*(d3*s2 + (5*d5*c4*s2)/4 - (5*d5*c2*c3*s4)/4)^2 + mm6*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4)^2 + mm7*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4)^2 + mm5*(d3*s2 + (d5*c4*s2)/2 - (d5*c2*c3*s4)/2)^2 + c1*(Il2(2,2)*c1 - Il2(1,2)*s1) + c1*(Il3(2,2)*c1 - Il3(1,2)*s1) + c1*(Il4(2,2)*c1 - Il4(1,2)*s1) + c1*(Il5(2,2)*c1 - Il5(1,2)*s1) + c1*(Il6(2,2)*c1 - Il6(1,2)*s1) + c1*(Il7(2,2)*c1 - Il7(1,2)*s1) - s1*(Il2(1,2)*c1 - Il2(1,1)*s1) - s1*(Il3(1,2)*c1 - Il3(1,1)*s1) - s1*(Il4(1,2)*c1 - Il4(1,1)*s1) - s1*(Il5(1,2)*c1 - Il5(1,1)*s1) - s1*(Il6(1,2)*c1 - Il6(1,1)*s1) - s1*(Il7(1,2)*c1 - Il7(1,1)*s1) + ml7*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4 + (9*d7*c4*c6*s2)/8 - (9*d7*c2*c3*c6*s4)/8 - (9*d7*c2*s3*s5*s6)/8 + (9*d7*c5*s2*s4*s6)/8 + (9*d7*c2*c3*c4*c5*s6)/8)^2 + ml6*c1^2*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)^2 + ml4*c1^2*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4)^2 + ml5*c1^2*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4)^2 + mm6*c1^2*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)^2 + mm7*c1^2*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)^2 + mm5*c1^2*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2)^2 + ml6*s1^2*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)^2 + ml4*s1^2*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4)^2 + ml5*s1^2*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4)^2 + mm6*s1^2*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)^2 + mm7*s1^2*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4)^2 + mm5*s1^2*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2)^2 + ml7*c1^2*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)^2 + ml7*s1^2*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)^2 + (d3^2*ml2*s2^2)/16 + (25*d3^2*ml3*s2^2)/16 + (d3^2*mm3*s2^2)/4 + d3^2*mm4*s2^2 + (d3^2*ml2*c2^2*s1^2)/16 + (25*d3^2*ml3*c2^2*s1^2)/16 + (d3^2*mm3*c2^2*s1^2)/4 + d3^2*mm4*c2^2*s1^2 + (d3^2*ml2*c1^2*c2^2)/16 + (25*d3^2*ml3*c1^2*c2^2)/16 + (d3^2*mm3*c1^2*c2^2)/4 + d3^2*mm4*c1^2*c2^2;
B(3,2)=c1*(Il3(2,3)*c2 + Il3(1,2)*c1*s2 + Il3(2,2)*s1*s2) + c1*(Il4(2,3)*c2 + Il4(1,2)*c1*s2 + Il4(2,2)*s1*s2) + c1*(Il5(2,3)*c2 + Il5(1,2)*c1*s2 + Il5(2,2)*s1*s2) + c1*(Il6(2,3)*c2 + Il6(1,2)*c1*s2 + Il6(2,2)*s1*s2) + c1*(Il7(2,3)*c2 + Il7(1,2)*c1*s2 + Il7(2,2)*s1*s2) - s1*(Il3(1,3)*c2 + Il3(1,1)*c1*s2 + Il3(1,2)*s1*s2) - s1*(Il4(1,3)*c2 + Il4(1,1)*c1*s2 + Il4(1,2)*s1*s2) - s1*(Il5(1,3)*c2 + Il5(1,1)*c1*s2 + Il5(1,2)*s1*s2) - s1*(Il6(1,3)*c2 + Il6(1,1)*c1*s2 + Il6(1,2)*s1*s2) - s1*(Il7(1,3)*c2 + Il7(1,1)*c1*s2 + Il7(1,2)*s1*s2) + ml7*c1*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)*(d5*c3*s1*s4 + d5*c1*c2*s3*s4 + (9*d7*c3*c6*s1*s4)/8 + (9*d7*s1*s3*s5*s6)/8 + (9*d7*c1*c2*c6*s3*s4)/8 - (9*d7*c1*c2*c3*s5*s6)/8 - (9*d7*c3*c4*c5*s1*s6)/8 - (9*d7*c1*c2*c4*c5*s3*s6)/8) + (ml7*s2*(8*d5*s3*s4 + 9*d7*c6*s3*s4 - 9*d7*c3*s5*s6 - 9*d7*c4*c5*s3*s6)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4 + (9*d7*c4*c6*s2)/8 - (9*d7*c2*c3*c6*s4)/8 - (9*d7*c2*s3*s5*s6)/8 + (9*d7*c5*s2*s4*s6)/8 + (9*d7*c2*c3*c4*c5*s6)/8))/8 - ml7*s1*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)*(d5*c1*c3*s4 + (9*d7*c1*c3*c6*s4)/8 - d5*c2*s1*s3*s4 + (9*d7*c1*s3*s5*s6)/8 - (9*d7*c2*c6*s1*s3*s4)/8 + (9*d7*c2*c3*s1*s5*s6)/8 - (9*d7*c1*c3*c4*c5*s6)/8 + (9*d7*c2*c4*c5*s1*s3*s6)/8) + d5*ml6*c1*s4*(c3*s1 + c1*c2*s3)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) + (d5*ml4*c1*s4*(c3*s1 + c1*c2*s3)*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4))/4 + (5*d5*ml5*c1*s4*(c3*s1 + c1*c2*s3)*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4))/4 + d5*mm6*c1*s4*(c3*s1 + c1*c2*s3)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) + d5*mm7*c1*s4*(c3*s1 + c1*c2*s3)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) + (d5*mm5*c1*s4*(c3*s1 + c1*c2*s3)*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2))/2 - d5*ml6*s1*s4*(c1*c3 - c2*s1*s3)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - (d5*ml4*s1*s4*(c1*c3 - c2*s1*s3)*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4))/4 - (5*d5*ml5*s1*s4*(c1*c3 - c2*s1*s3)*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4))/4 - d5*mm6*s1*s4*(c1*c3 - c2*s1*s3)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - d5*mm7*s1*s4*(c1*c3 - c2*s1*s3)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - (d5*mm5*s1*s4*(c1*c3 - c2*s1*s3)*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2))/2 + d5*ml6*s2*s3*s4*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4) + (d5*ml4*s2*s3*s4*(d3*s2 + (d5*c4*s2)/4 - (d5*c2*c3*s4)/4))/4 + (5*d5*ml5*s2*s3*s4*(d3*s2 + (5*d5*c4*s2)/4 - (5*d5*c2*c3*s4)/4))/4 + d5*mm6*s2*s3*s4*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4) + d5*mm7*s2*s3*s4*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4) + (d5*mm5*s2*s3*s4*(d3*s2 + (d5*c4*s2)/2 - (d5*c2*c3*s4)/2))/2;
B(4,2)=s1*(Il4(1,2)*(c1*c3 - c2*s1*s3) - Il4(1,1)*(c3*s1 + c1*c2*s3) + Il4(1,3)*s2*s3) - c1*(Il5(2,2)*(c1*c3 - c2*s1*s3) - Il5(1,2)*(c3*s1 + c1*c2*s3) + Il5(2,3)*s2*s3) - c1*(Il6(2,2)*(c1*c3 - c2*s1*s3) - Il6(1,2)*(c3*s1 + c1*c2*s3) + Il6(2,3)*s2*s3) - c1*(Il7(2,2)*(c1*c3 - c2*s1*s3) - Il7(1,2)*(c3*s1 + c1*c2*s3) + Il7(2,3)*s2*s3) - c1*(Il4(2,2)*(c1*c3 - c2*s1*s3) - Il4(1,2)*(c3*s1 + c1*c2*s3) + Il4(2,3)*s2*s3) + s1*(Il5(1,2)*(c1*c3 - c2*s1*s3) - Il5(1,1)*(c3*s1 + c1*c2*s3) + Il5(1,3)*s2*s3) + s1*(Il6(1,2)*(c1*c3 - c2*s1*s3) - Il6(1,1)*(c3*s1 + c1*c2*s3) + Il6(1,3)*s2*s3) + s1*(Il7(1,2)*(c1*c3 - c2*s1*s3) - Il7(1,1)*(c3*s1 + c1*c2*s3) + Il7(1,3)*s2*s3) - ml7*(d5*c3*c4*s2 - d5*c2*s4 - (9*d7*c2*c6*s4)/8 + (9*d7*c3*c4*c6*s2)/8 + (9*d7*c2*c4*c5*s6)/8 + (9*d7*c3*c5*s2*s4*s6)/8)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4 + (9*d7*c4*c6*s2)/8 - (9*d7*c2*c3*c6*s4)/8 - (9*d7*c2*s3*s5*s6)/8 + (9*d7*c5*s2*s4*s6)/8 + (9*d7*c2*c3*c4*c5*s6)/8) + ml6*(d5*c2*s4 - d5*c3*c4*s2)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4) + mm6*(d5*c2*s4 - d5*c3*c4*s2)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4) + mm7*(d5*c2*s4 - d5*c3*c4*s2)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4) - ml6*s1*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - ml4*s1*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4)*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4) - ml4*c1*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4)*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4) - ml5*s1*((5*d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4)*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4) - ml5*c1*((5*d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4)*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4) - mm6*s1*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - mm7*s1*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - mm5*s1*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/2)*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2) - mm5*c1*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/2)*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2) - ml7*s1*((c3*s1 + c1*c2*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8))*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2) - ml7*c1*((c1*c3 - c2*s1*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4)))*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2) + (d5*ml4*(c2*s4 - c3*c4*s2)*(d3*s2 + (d5*c4*s2)/4 - (d5*c2*c3*s4)/4))/4 + (5*d5*ml5*(c2*s4 - c3*c4*s2)*(d3*s2 + (5*d5*c4*s2)/4 - (5*d5*c2*c3*s4)/4))/4 + (d5*mm5*(c2*s4 - c3*c4*s2)*(d3*s2 + (d5*c4*s2)/2 - (d5*c2*c3*s4)/2))/2 - d5*ml6*c1*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - d5*mm6*c1*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - d5*mm7*c1*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4);
B(5,2)=c1*(Il5(2,3)*(c2*c4 + c3*s2*s4) + Il5(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il5(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + c1*(Il6(2,3)*(c2*c4 + c3*s2*s4) + Il6(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + c1*(Il7(2,3)*(c2*c4 + c3*s2*s4) + Il7(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - s1*(Il5(1,3)*(c2*c4 + c3*s2*s4) + Il5(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il5(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - s1*(Il6(1,3)*(c2*c4 + c3*s2*s4) + Il6(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - s1*(Il7(1,3)*(c2*c4 + c3*s2*s4) + Il7(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - (9*d7*ml7*s6*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4 + (9*d7*c4*c6*s2)/8 - (9*d7*c2*c3*c6*s4)/8 - (9*d7*c2*s3*s5*s6)/8 + (9*d7*c5*s2*s4*s6)/8 + (9*d7*c2*c3*c4*c5*s6)/8))/8 - (9*d7*ml7*c1*s6*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)*(c3*c5*s1 + c1*c2*c5*s3 + c1*s2*s4*s5 - c4*s1*s3*s5 + c1*c2*c3*c4*s5))/8 - (9*d7*ml7*s1*s6*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)*(c2*c5*s1*s3 - c1*c3*c5 + c1*c4*s3*s5 + s1*s2*s4*s5 + c2*c3*c4*s1*s5))/8;
B(6,2)=s1*(Il6(1,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,1)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(1,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - c1*(Il7(2,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,2)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(2,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - c1*(Il6(2,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,2)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(2,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) + s1*(Il7(1,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,1)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(1,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) + (9*d7*ml7*(c2*c4*s6 - c2*c5*c6*s4 + c3*s2*s4*s6 - c6*s2*s3*s5 + c3*c4*c5*c6*s2)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4 + (9*d7*c4*c6*s2)/8 - (9*d7*c2*c3*c6*s4)/8 - (9*d7*c2*s3*s5*s6)/8 + (9*d7*c5*s2*s4*s6)/8 + (9*d7*c2*c3*c4*c5*s6)/8))/8 + ml7*s1*((9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 + (9*d7*(s5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) + c5*(c3*s1 + c1*c2*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2) + ml7*c1*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 - (9*d7*(s5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) - c5*(c1*c3 - c2*s1*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2);
B(7,2)=c1*(Il7(1,2)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(2,2)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(2,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) - s1*(Il7(1,1)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(1,2)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(1,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4)));
B(1,3)=Im3*kr3 + Il3(3,3)*c2 + Il4(3,3)*c2 + Il5(3,3)*c2 + Il6(3,3)*c2 + Il7(3,3)*c2 + Im4*c2 + Im5*c2 + Im6*c2 + Im7*c2 + ml7*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - d3*s1*s2)*(d5*c3*s1*s4 + d5*c1*c2*s3*s4 + (9*d7*c3*c6*s1*s4)/8 + (9*d7*s1*s3*s5*s6)/8 + (9*d7*c1*c2*c6*s3*s4)/8 - (9*d7*c1*c2*c3*s5*s6)/8 - (9*d7*c3*c4*c5*s1*s6)/8 - (9*d7*c1*c2*c4*c5*s3*s6)/8) + Il3(1,3)*c1*s2 + Il4(1,3)*c1*s2 + Il5(1,3)*c1*s2 + Il6(1,3)*c1*s2 + Il7(1,3)*c1*s2 + Il3(2,3)*s1*s2 + Il4(2,3)*s1*s2 + Il5(2,3)*s1*s2 + Il6(2,3)*s1*s2 + Il7(2,3)*s1*s2 - ml7*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8 + d3*c1*s2)*(d5*c1*c3*s4 + (9*d7*c1*c3*c6*s4)/8 - d5*c2*s1*s3*s4 + (9*d7*c1*s3*s5*s6)/8 - (9*d7*c2*c6*s1*s3*s4)/8 + (9*d7*c2*c3*s1*s5*s6)/8 - (9*d7*c1*c3*c4*c5*s6)/8 + (9*d7*c2*c4*c5*s1*s3*s6)/8) - d5*ml6*s4*(c1*c3 - c2*s1*s3)*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) - (d5*ml4*s4*(c1*c3 - c2*s1*s3)*(d3*c1*s2 + (d5*c1*c4*s2)/4 + (d5*s1*s3*s4)/4 - (d5*c1*c2*c3*s4)/4))/4 - (5*d5*ml5*s4*(c1*c3 - c2*s1*s3)*(d3*c1*s2 + (5*d5*c1*c4*s2)/4 + (5*d5*s1*s3*s4)/4 - (5*d5*c1*c2*c3*s4)/4))/4 - d5*mm6*s4*(c1*c3 - c2*s1*s3)*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) - d5*mm7*s4*(c1*c3 - c2*s1*s3)*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) - (d5*mm5*s4*(c1*c3 - c2*s1*s3)*(d3*c1*s2 + (d5*c1*c4*s2)/2 + (d5*s1*s3*s4)/2 - (d5*c1*c2*c3*s4)/2))/2 - d5*ml6*s4*(c3*s1 + c1*c2*s3)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) - (d5*ml4*s4*(c3*s1 + c1*c2*s3)*(d3*s1*s2 + (d5*c4*s1*s2)/4 - (d5*c1*s3*s4)/4 - (d5*c2*c3*s1*s4)/4))/4 - (5*d5*ml5*s4*(c3*s1 + c1*c2*s3)*(d3*s1*s2 + (5*d5*c4*s1*s2)/4 - (5*d5*c1*s3*s4)/4 - (5*d5*c2*c3*s1*s4)/4))/4 - d5*mm6*s4*(c3*s1 + c1*c2*s3)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) - d5*mm7*s4*(c3*s1 + c1*c2*s3)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) - (d5*mm5*s4*(c3*s1 + c1*c2*s3)*(d3*s1*s2 + (d5*c4*s1*s2)/2 - (d5*c1*s3*s4)/2 - (d5*c2*c3*s1*s4)/2))/2;
B(2,3)=c2*(Il3(2,3)*c1 - Il3(1,3)*s1) + c2*(Il4(2,3)*c1 - Il4(1,3)*s1) + c2*(Il5(2,3)*c1 - Il5(1,3)*s1) + c2*(Il6(2,3)*c1 - Il6(1,3)*s1) + c2*(Il7(2,3)*c1 - Il7(1,3)*s1) + c1*s2*(Il3(1,2)*c1 - Il3(1,1)*s1) + c1*s2*(Il4(1,2)*c1 - Il4(1,1)*s1) + c1*s2*(Il5(1,2)*c1 - Il5(1,1)*s1) + c1*s2*(Il6(1,2)*c1 - Il6(1,1)*s1) + c1*s2*(Il7(1,2)*c1 - Il7(1,1)*s1) + s1*s2*(Il3(2,2)*c1 - Il3(1,2)*s1) + s1*s2*(Il4(2,2)*c1 - Il4(1,2)*s1) + s1*s2*(Il5(2,2)*c1 - Il5(1,2)*s1) + s1*s2*(Il6(2,2)*c1 - Il6(1,2)*s1) + s1*s2*(Il7(2,2)*c1 - Il7(1,2)*s1) + ml7*c1*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)*(d5*c3*s1*s4 + d5*c1*c2*s3*s4 + (9*d7*c3*c6*s1*s4)/8 + (9*d7*s1*s3*s5*s6)/8 + (9*d7*c1*c2*c6*s3*s4)/8 - (9*d7*c1*c2*c3*s5*s6)/8 - (9*d7*c3*c4*c5*s1*s6)/8 - (9*d7*c1*c2*c4*c5*s3*s6)/8) + (ml7*s2*(8*d5*s3*s4 + 9*d7*c6*s3*s4 - 9*d7*c3*s5*s6 - 9*d7*c4*c5*s3*s6)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4 + (9*d7*c4*c6*s2)/8 - (9*d7*c2*c3*c6*s4)/8 - (9*d7*c2*s3*s5*s6)/8 + (9*d7*c5*s2*s4*s6)/8 + (9*d7*c2*c3*c4*c5*s6)/8))/8 - ml7*s1*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)*(d5*c1*c3*s4 + (9*d7*c1*c3*c6*s4)/8 - d5*c2*s1*s3*s4 + (9*d7*c1*s3*s5*s6)/8 - (9*d7*c2*c6*s1*s3*s4)/8 + (9*d7*c2*c3*s1*s5*s6)/8 - (9*d7*c1*c3*c4*c5*s6)/8 + (9*d7*c2*c4*c5*s1*s3*s6)/8) + d5*ml6*c1*s4*(c3*s1 + c1*c2*s3)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) + (d5*ml4*c1*s4*(c3*s1 + c1*c2*s3)*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4))/4 + (5*d5*ml5*c1*s4*(c3*s1 + c1*c2*s3)*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4))/4 + d5*mm6*c1*s4*(c3*s1 + c1*c2*s3)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) + d5*mm7*c1*s4*(c3*s1 + c1*c2*s3)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) + (d5*mm5*c1*s4*(c3*s1 + c1*c2*s3)*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2))/2 - d5*ml6*s1*s4*(c1*c3 - c2*s1*s3)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - (d5*ml4*s1*s4*(c1*c3 - c2*s1*s3)*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4))/4 - (5*d5*ml5*s1*s4*(c1*c3 - c2*s1*s3)*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4))/4 - d5*mm6*s1*s4*(c1*c3 - c2*s1*s3)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - d5*mm7*s1*s4*(c1*c3 - c2*s1*s3)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - (d5*mm5*s1*s4*(c1*c3 - c2*s1*s3)*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2))/2 + d5*ml6*s2*s3*s4*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4) + (d5*ml4*s2*s3*s4*(d3*s2 + (d5*c4*s2)/4 - (d5*c2*c3*s4)/4))/4 + (5*d5*ml5*s2*s3*s4*(d3*s2 + (5*d5*c4*s2)/4 - (5*d5*c2*c3*s4)/4))/4 + d5*mm6*s2*s3*s4*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4) + d5*mm7*s2*s3*s4*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4) + (d5*mm5*s2*s3*s4*(d3*s2 + (d5*c4*s2)/2 - (d5*c2*c3*s4)/2))/2;
B(3,3)=Im3*kr3^2 + ml7*(d5*c3*s1*s4 + d5*c1*c2*s3*s4 + (9*d7*c3*c6*s1*s4)/8 + (9*d7*s1*s3*s5*s6)/8 + (9*d7*c1*c2*c6*s3*s4)/8 - (9*d7*c1*c2*c3*s5*s6)/8 - (9*d7*c3*c4*c5*s1*s6)/8 - (9*d7*c1*c2*c4*c5*s3*s6)/8)^2 + ml7*(d5*c1*c3*s4 + (9*d7*c1*c3*c6*s4)/8 - d5*c2*s1*s3*s4 + (9*d7*c1*s3*s5*s6)/8 - (9*d7*c2*c6*s1*s3*s4)/8 + (9*d7*c2*c3*s1*s5*s6)/8 - (9*d7*c1*c3*c4*c5*s6)/8 + (9*d7*c2*c4*c5*s1*s3*s6)/8)^2 + Im4*c2^2 + Im5*c2^2 + Im6*c2^2 + Im7*c2^2 + c2*(Il3(3,3)*c2 + Il3(1,3)*c1*s2 + Il3(2,3)*s1*s2) + c2*(Il4(3,3)*c2 + Il4(1,3)*c1*s2 + Il4(2,3)*s1*s2) + c2*(Il5(3,3)*c2 + Il5(1,3)*c1*s2 + Il5(2,3)*s1*s2) + c2*(Il6(3,3)*c2 + Il6(1,3)*c1*s2 + Il6(2,3)*s1*s2) + c2*(Il7(3,3)*c2 + Il7(1,3)*c1*s2 + Il7(2,3)*s1*s2) + (ml7*s2^2*(8*d5*s3*s4 + 9*d7*c6*s3*s4 - 9*d7*c3*s5*s6 - 9*d7*c4*c5*s3*s6)^2)/64 + c1*s2*(Il3(1,3)*c2 + Il3(1,1)*c1*s2 + Il3(1,2)*s1*s2) + c1*s2*(Il4(1,3)*c2 + Il4(1,1)*c1*s2 + Il4(1,2)*s1*s2) + c1*s2*(Il5(1,3)*c2 + Il5(1,1)*c1*s2 + Il5(1,2)*s1*s2) + c1*s2*(Il6(1,3)*c2 + Il6(1,1)*c1*s2 + Il6(1,2)*s1*s2) + c1*s2*(Il7(1,3)*c2 + Il7(1,1)*c1*s2 + Il7(1,2)*s1*s2) + s1*s2*(Il3(2,3)*c2 + Il3(1,2)*c1*s2 + Il3(2,2)*s1*s2) + s1*s2*(Il4(2,3)*c2 + Il4(1,2)*c1*s2 + Il4(2,2)*s1*s2) + s1*s2*(Il5(2,3)*c2 + Il5(1,2)*c1*s2 + Il5(2,2)*s1*s2) + s1*s2*(Il6(2,3)*c2 + Il6(1,2)*c1*s2 + Il6(2,2)*s1*s2) + s1*s2*(Il7(2,3)*c2 + Il7(1,2)*c1*s2 + Il7(2,2)*s1*s2) + (d5^2*ml4*s4^2*(c3*s1 + c1*c2*s3)^2)/16 + (d5^2*ml4*s4^2*(c1*c3 - c2*s1*s3)^2)/16 + (25*d5^2*ml5*s4^2*(c3*s1 + c1*c2*s3)^2)/16 + (25*d5^2*ml5*s4^2*(c1*c3 - c2*s1*s3)^2)/16 + d5^2*ml6*s4^2*(c3*s1 + c1*c2*s3)^2 + d5^2*ml6*s4^2*(c1*c3 - c2*s1*s3)^2 + (d5^2*mm5*s4^2*(c3*s1 + c1*c2*s3)^2)/4 + (d5^2*mm5*s4^2*(c1*c3 - c2*s1*s3)^2)/4 + d5^2*mm6*s4^2*(c3*s1 + c1*c2*s3)^2 + d5^2*mm6*s4^2*(c1*c3 - c2*s1*s3)^2 + d5^2*mm7*s4^2*(c3*s1 + c1*c2*s3)^2 + d5^2*mm7*s4^2*(c1*c3 - c2*s1*s3)^2 + (d5^2*ml4*s2^2*s3^2*s4^2)/16 + (25*d5^2*ml5*s2^2*s3^2*s4^2)/16 + d5^2*ml6*s2^2*s3^2*s4^2 + (d5^2*mm5*s2^2*s3^2*s4^2)/4 + d5^2*mm6*s2^2*s3^2*s4^2 + d5^2*mm7*s2^2*s3^2*s4^2;
B(4,3)=ml7*((c3*s1 + c1*c2*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8))*(d5*c1*c3*s4 + (9*d7*c1*c3*c6*s4)/8 - d5*c2*s1*s3*s4 + (9*d7*c1*s3*s5*s6)/8 - (9*d7*c2*c6*s1*s3*s4)/8 + (9*d7*c2*c3*s1*s5*s6)/8 - (9*d7*c1*c3*c4*c5*s6)/8 + (9*d7*c2*c4*c5*s1*s3*s6)/8) - c2*(Il5(2,3)*(c1*c3 - c2*s1*s3) - Il5(1,3)*(c3*s1 + c1*c2*s3) + Il5(3,3)*s2*s3) - c2*(Il6(2,3)*(c1*c3 - c2*s1*s3) - Il6(1,3)*(c3*s1 + c1*c2*s3) + Il6(3,3)*s2*s3) - c2*(Il7(2,3)*(c1*c3 - c2*s1*s3) - Il7(1,3)*(c3*s1 + c1*c2*s3) + Il7(3,3)*s2*s3) - c1*s2*(Il4(1,2)*(c1*c3 - c2*s1*s3) - Il4(1,1)*(c3*s1 + c1*c2*s3) + Il4(1,3)*s2*s3) - c1*s2*(Il5(1,2)*(c1*c3 - c2*s1*s3) - Il5(1,1)*(c3*s1 + c1*c2*s3) + Il5(1,3)*s2*s3) - c1*s2*(Il6(1,2)*(c1*c3 - c2*s1*s3) - Il6(1,1)*(c3*s1 + c1*c2*s3) + Il6(1,3)*s2*s3) - c1*s2*(Il7(1,2)*(c1*c3 - c2*s1*s3) - Il7(1,1)*(c3*s1 + c1*c2*s3) + Il7(1,3)*s2*s3) - s1*s2*(Il4(2,2)*(c1*c3 - c2*s1*s3) - Il4(1,2)*(c3*s1 + c1*c2*s3) + Il4(2,3)*s2*s3) - s1*s2*(Il5(2,2)*(c1*c3 - c2*s1*s3) - Il5(1,2)*(c3*s1 + c1*c2*s3) + Il5(2,3)*s2*s3) - s1*s2*(Il6(2,2)*(c1*c3 - c2*s1*s3) - Il6(1,2)*(c3*s1 + c1*c2*s3) + Il6(2,3)*s2*s3) - s1*s2*(Il7(2,2)*(c1*c3 - c2*s1*s3) - Il7(1,2)*(c3*s1 + c1*c2*s3) + Il7(2,3)*s2*s3) - c2*(Il4(2,3)*(c1*c3 - c2*s1*s3) - Il4(1,3)*(c3*s1 + c1*c2*s3) + Il4(3,3)*s2*s3) - ml7*((c1*c3 - c2*s1*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4)))*(d5*c3*s1*s4 + d5*c1*c2*s3*s4 + (9*d7*c3*c6*s1*s4)/8 + (9*d7*s1*s3*s5*s6)/8 + (9*d7*c1*c2*c6*s3*s4)/8 - (9*d7*c1*c2*c3*s5*s6)/8 - (9*d7*c3*c4*c5*s1*s6)/8 - (9*d7*c1*c2*c4*c5*s3*s6)/8) - Im5*c2*s2*s3 - Im6*c2*s2*s3 - Im7*c2*s2*s3 - (ml7*s2*(8*d5*s3*s4 + 9*d7*c6*s3*s4 - 9*d7*c3*s5*s6 - 9*d7*c4*c5*s3*s6)*(d5*c3*c4*s2 - d5*c2*s4 - (9*d7*c2*c6*s4)/8 + (9*d7*c3*c4*c6*s2)/8 + (9*d7*c2*c4*c5*s6)/8 + (9*d7*c3*c5*s2*s4*s6)/8))/8 + d5*ml6*s4*(c1*c3 - c2*s1*s3)*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4)) + (d5*ml4*s4*(c1*c3 - c2*s1*s3)*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4))/4 + (5*d5*ml5*s4*(c1*c3 - c2*s1*s3)*((5*d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4))/4 + d5*mm6*s4*(c1*c3 - c2*s1*s3)*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4)) + d5*mm7*s4*(c1*c3 - c2*s1*s3)*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4)) + (d5*mm5*s4*(c1*c3 - c2*s1*s3)*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/2))/2 - (d5*ml4*s4*(c3*s1 + c1*c2*s3)*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4))/4 - (5*d5*ml5*s4*(c3*s1 + c1*c2*s3)*((5*d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4))/4 - (d5*mm5*s4*(c3*s1 + c1*c2*s3)*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/2))/2 - d5^2*ml6*s4*(c3*s1 + c1*c2*s3)*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - d5^2*mm6*s4*(c3*s1 + c1*c2*s3)*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - d5^2*mm7*s4*(c3*s1 + c1*c2*s3)*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) + d5*ml6*s2*s3*s4*(d5*c2*s4 - d5*c3*c4*s2) + d5*mm6*s2*s3*s4*(d5*c2*s4 - d5*c3*c4*s2) + d5*mm7*s2*s3*s4*(d5*c2*s4 - d5*c3*c4*s2) + (d5^2*ml4*s2*s3*s4*(c2*s4 - c3*c4*s2))/16 + (25*d5^2*ml5*s2*s3*s4*(c2*s4 - c3*c4*s2))/16 + (d5^2*mm5*s2*s3*s4*(c2*s4 - c3*c4*s2))/4;
B(5,3)=c2*(Il5(3,3)*(c2*c4 + c3*s2*s4) + Il5(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il5(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + c2*(Il6(3,3)*(c2*c4 + c3*s2*s4) + Il6(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + c2*(Il7(3,3)*(c2*c4 + c3*s2*s4) + Il7(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + c1*s2*(Il5(1,3)*(c2*c4 + c3*s2*s4) + Il5(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il5(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + c1*s2*(Il6(1,3)*(c2*c4 + c3*s2*s4) + Il6(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + c1*s2*(Il7(1,3)*(c2*c4 + c3*s2*s4) + Il7(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + s1*s2*(Il5(2,3)*(c2*c4 + c3*s2*s4) + Il5(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il5(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + s1*s2*(Il6(2,3)*(c2*c4 + c3*s2*s4) + Il6(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + s1*s2*(Il7(2,3)*(c2*c4 + c3*s2*s4) + Il7(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + Im6*c2*(c2*c4 + c3*s2*s4) + Im7*c2*(c2*c4 + c3*s2*s4) + Im5*kr5*c2 + (9*d7*ml7*s6*(c2*c5*s1*s3 - c1*c3*c5 + c1*c4*s3*s5 + s1*s2*s4*s5 + c2*c3*c4*s1*s5)*(d5*c1*c3*s4 + (9*d7*c1*c3*c6*s4)/8 - d5*c2*s1*s3*s4 + (9*d7*c1*s3*s5*s6)/8 - (9*d7*c2*c6*s1*s3*s4)/8 + (9*d7*c2*c3*s1*s5*s6)/8 - (9*d7*c1*c3*c4*c5*s6)/8 + (9*d7*c2*c4*c5*s1*s3*s6)/8))/8 - (9*d7*ml7*s6*(c3*c5*s1 + c1*c2*c5*s3 + c1*s2*s4*s5 - c4*s1*s3*s5 + c1*c2*c3*c4*s5)*(d5*c3*s1*s4 + d5*c1*c2*s3*s4 + (9*d7*c3*c6*s1*s4)/8 + (9*d7*s1*s3*s5*s6)/8 + (9*d7*c1*c2*c6*s3*s4)/8 - (9*d7*c1*c2*c3*s5*s6)/8 - (9*d7*c3*c4*c5*s1*s6)/8 - (9*d7*c1*c2*c4*c5*s3*s6)/8))/8 - (9*d7*ml7*s2*s6*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5)*(8*d5*s3*s4 + 9*d7*c6*s3*s4 - 9*d7*c3*s5*s6 - 9*d7*c4*c5*s3*s6))/64;
B(6,3)=ml7*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 - (9*d7*(s5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) - c5*(c1*c3 - c2*s1*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*(d5*c3*s1*s4 + d5*c1*c2*s3*s4 + (9*d7*c3*c6*s1*s4)/8 + (9*d7*s1*s3*s5*s6)/8 + (9*d7*c1*c2*c6*s3*s4)/8 - (9*d7*c1*c2*c3*s5*s6)/8 - (9*d7*c3*c4*c5*s1*s6)/8 - (9*d7*c1*c2*c4*c5*s3*s6)/8) - c2*(Il7(3,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,3)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(2,3)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - ml7*((9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 + (9*d7*(s5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) + c5*(c3*s1 + c1*c2*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*(d5*c1*c3*s4 + (9*d7*c1*c3*c6*s4)/8 - d5*c2*s1*s3*s4 + (9*d7*c1*s3*s5*s6)/8 - (9*d7*c2*c6*s1*s3*s4)/8 + (9*d7*c2*c3*s1*s5*s6)/8 - (9*d7*c1*c3*c4*c5*s6)/8 + (9*d7*c2*c4*c5*s1*s3*s6)/8) - c2*(Il6(3,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,3)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(2,3)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - Im7*c2*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - c1*s2*(Il6(1,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,1)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(1,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - c1*s2*(Il7(1,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,1)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(1,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - s1*s2*(Il6(2,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,2)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(2,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - s1*s2*(Il7(2,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,2)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(2,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) + (9*d7*ml7*s2*(8*d5*s3*s4 + 9*d7*c6*s3*s4 - 9*d7*c3*s5*s6 - 9*d7*c4*c5*s3*s6)*(c2*c4*s6 - c2*c5*c6*s4 + c3*s2*s4*s6 - c6*s2*s3*s5 + c3*c4*c5*c6*s2))/64;
B(7,3)=c2*(Il7(1,3)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(2,3)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(3,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) + c1*s2*(Il7(1,1)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(1,2)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(1,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) + s1*s2*(Il7(1,2)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(2,2)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(2,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) + Im7*kr7*c2;
B(1,4)=Il4(1,3)*(c3*s1 + c1*c2*s3) + Il5(1,3)*(c3*s1 + c1*c2*s3) + Il6(1,3)*(c3*s1 + c1*c2*s3) + Il7(1,3)*(c3*s1 + c1*c2*s3) - Il4(2,3)*(c1*c3 - c2*s1*s3) - Il5(2,3)*(c1*c3 - c2*s1*s3) - Il6(2,3)*(c1*c3 - c2*s1*s3) - Il7(2,3)*(c1*c3 - c2*s1*s3) - ml7*((c1*c3 - c2*s1*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4)))*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - d3*s1*s2) - ml6*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) - ml4*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4)*(d3*c1*s2 + (d5*c1*c4*s2)/4 + (d5*s1*s3*s4)/4 - (d5*c1*c2*c3*s4)/4) - ml5*((5*d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4)*(d3*c1*s2 + (5*d5*c1*c4*s2)/4 + (5*d5*s1*s3*s4)/4 - (5*d5*c1*c2*c3*s4)/4) - mm6*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) - mm7*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))*(d3*c1*s2 + d5*c1*c4*s2 + d5*s1*s3*s4 - d5*c1*c2*c3*s4) - mm5*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/2)*(d3*c1*s2 + (d5*c1*c4*s2)/2 + (d5*s1*s3*s4)/2 - (d5*c1*c2*c3*s4)/2) + ml4*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4)*(d3*s1*s2 + (d5*c4*s1*s2)/4 - (d5*c1*s3*s4)/4 - (d5*c2*c3*s1*s4)/4) + ml5*((5*d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4)*(d3*s1*s2 + (5*d5*c4*s1*s2)/4 - (5*d5*c1*s3*s4)/4 - (5*d5*c2*c3*s1*s4)/4) + mm5*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/2)*(d3*s1*s2 + (d5*c4*s1*s2)/2 - (d5*c1*s3*s4)/2 - (d5*c2*c3*s1*s4)/2) - Il4(3,3)*s2*s3 - Il5(3,3)*s2*s3 - Il6(3,3)*s2*s3 - Il7(3,3)*s2*s3 - Im5*s2*s3 - Im6*s2*s3 - Im7*s2*s3 - ml7*((c3*s1 + c1*c2*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8))*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8 + d3*c1*s2) + d5*ml6*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) + d5*mm6*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4) + d5*mm7*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)*(d3*s1*s2 + d5*c4*s1*s2 - d5*c1*s3*s4 - d5*c2*c3*s1*s4);
B(2,4)=(c3*s1 + c1*c2*s3)*(Il4(1,2)*c1 - Il4(1,1)*s1) + (c3*s1 + c1*c2*s3)*(Il5(1,2)*c1 - Il5(1,1)*s1) + (c3*s1 + c1*c2*s3)*(Il6(1,2)*c1 - Il6(1,1)*s1) + (c3*s1 + c1*c2*s3)*(Il7(1,2)*c1 - Il7(1,1)*s1) - (c1*c3 - c2*s1*s3)*(Il4(2,2)*c1 - Il4(1,2)*s1) - (c1*c3 - c2*s1*s3)*(Il5(2,2)*c1 - Il5(1,2)*s1) - (c1*c3 - c2*s1*s3)*(Il6(2,2)*c1 - Il6(1,2)*s1) - (c1*c3 - c2*s1*s3)*(Il7(2,2)*c1 - Il7(1,2)*s1) - ml7*(d5*c3*c4*s2 - d5*c2*s4 - (9*d7*c2*c6*s4)/8 + (9*d7*c3*c4*c6*s2)/8 + (9*d7*c2*c4*c5*s6)/8 + (9*d7*c3*c5*s2*s4*s6)/8)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4 + (9*d7*c4*c6*s2)/8 - (9*d7*c2*c3*c6*s4)/8 - (9*d7*c2*s3*s5*s6)/8 + (9*d7*c5*s2*s4*s6)/8 + (9*d7*c2*c3*c4*c5*s6)/8) - s2*s3*(Il4(2,3)*c1 - Il4(1,3)*s1) - s2*s3*(Il5(2,3)*c1 - Il5(1,3)*s1) - s2*s3*(Il6(2,3)*c1 - Il6(1,3)*s1) - s2*s3*(Il7(2,3)*c1 - Il7(1,3)*s1) + ml6*(d5*c2*s4 - d5*c3*c4*s2)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4) + mm6*(d5*c2*s4 - d5*c3*c4*s2)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4) + mm7*(d5*c2*s4 - d5*c3*c4*s2)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4) - ml6*s1*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - ml4*s1*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4)*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4) - ml4*c1*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4)*(d3*c2 + (d5*c2*c4)/4 + (d5*c3*s2*s4)/4) - ml5*s1*((5*d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4)*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4) - ml5*c1*((5*d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4)*(d3*c2 + (5*d5*c2*c4)/4 + (5*d5*c3*s2*s4)/4) - mm6*s1*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - mm7*s1*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - mm5*s1*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/2)*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2) - mm5*c1*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/2)*(d3*c2 + (d5*c2*c4)/2 + (d5*c3*s2*s4)/2) - ml7*s1*((c3*s1 + c1*c2*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8))*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2) - ml7*c1*((c1*c3 - c2*s1*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4)))*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2) + (d5*ml4*(c2*s4 - c3*c4*s2)*(d3*s2 + (d5*c4*s2)/4 - (d5*c2*c3*s4)/4))/4 + (5*d5*ml5*(c2*s4 - c3*c4*s2)*(d3*s2 + (5*d5*c4*s2)/4 - (5*d5*c2*c3*s4)/4))/4 + (d5*mm5*(c2*s4 - c3*c4*s2)*(d3*s2 + (d5*c4*s2)/2 - (d5*c2*c3*s4)/2))/2 - d5*ml6*c1*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - d5*mm6*c1*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4) - d5*mm7*c1*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)*(d3*c2 + d5*c2*c4 + d5*c3*s2*s4);
B(3,4)=(c3*s1 + c1*c2*s3)*(Il4(1,3)*c2 + Il4(1,1)*c1*s2 + Il4(1,2)*s1*s2) + (c3*s1 + c1*c2*s3)*(Il5(1,3)*c2 + Il5(1,1)*c1*s2 + Il5(1,2)*s1*s2) + (c3*s1 + c1*c2*s3)*(Il6(1,3)*c2 + Il6(1,1)*c1*s2 + Il6(1,2)*s1*s2) + (c3*s1 + c1*c2*s3)*(Il7(1,3)*c2 + Il7(1,1)*c1*s2 + Il7(1,2)*s1*s2) - (c1*c3 - c2*s1*s3)*(Il4(2,3)*c2 + Il4(1,2)*c1*s2 + Il4(2,2)*s1*s2) - (c1*c3 - c2*s1*s3)*(Il5(2,3)*c2 + Il5(1,2)*c1*s2 + Il5(2,2)*s1*s2) - (c1*c3 - c2*s1*s3)*(Il6(2,3)*c2 + Il6(1,2)*c1*s2 + Il6(2,2)*s1*s2) - (c1*c3 - c2*s1*s3)*(Il7(2,3)*c2 + Il7(1,2)*c1*s2 + Il7(2,2)*s1*s2) + ml7*((c3*s1 + c1*c2*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8))*(d5*c1*c3*s4 + (9*d7*c1*c3*c6*s4)/8 - d5*c2*s1*s3*s4 + (9*d7*c1*s3*s5*s6)/8 - (9*d7*c2*c6*s1*s3*s4)/8 + (9*d7*c2*c3*s1*s5*s6)/8 - (9*d7*c1*c3*c4*c5*s6)/8 + (9*d7*c2*c4*c5*s1*s3*s6)/8) - ml7*((c1*c3 - c2*s1*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4)))*(d5*c3*s1*s4 + d5*c1*c2*s3*s4 + (9*d7*c3*c6*s1*s4)/8 + (9*d7*s1*s3*s5*s6)/8 + (9*d7*c1*c2*c6*s3*s4)/8 - (9*d7*c1*c2*c3*s5*s6)/8 - (9*d7*c3*c4*c5*s1*s6)/8 - (9*d7*c1*c2*c4*c5*s3*s6)/8) - s2*s3*(Il4(3,3)*c2 + Il4(1,3)*c1*s2 + Il4(2,3)*s1*s2) - s2*s3*(Il5(3,3)*c2 + Il5(1,3)*c1*s2 + Il5(2,3)*s1*s2) - s2*s3*(Il6(3,3)*c2 + Il6(1,3)*c1*s2 + Il6(2,3)*s1*s2) - s2*s3*(Il7(3,3)*c2 + Il7(1,3)*c1*s2 + Il7(2,3)*s1*s2) - Im5*c2*s2*s3 - Im6*c2*s2*s3 - Im7*c2*s2*s3 - (ml7*s2*(8*d5*s3*s4 + 9*d7*c6*s3*s4 - 9*d7*c3*s5*s6 - 9*d7*c4*c5*s3*s6)*(d5*c3*c4*s2 - d5*c2*s4 - (9*d7*c2*c6*s4)/8 + (9*d7*c3*c4*c6*s2)/8 + (9*d7*c2*c4*c5*s6)/8 + (9*d7*c3*c5*s2*s4*s6)/8))/8 + d5*ml6*s4*(c1*c3 - c2*s1*s3)*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4)) + (d5*ml4*s4*(c1*c3 - c2*s1*s3)*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4))/4 + (5*d5*ml5*s4*(c1*c3 - c2*s1*s3)*((5*d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4))/4 + d5*mm6*s4*(c1*c3 - c2*s1*s3)*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4)) + d5*mm7*s4*(c1*c3 - c2*s1*s3)*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4)) + (d5*mm5*s4*(c1*c3 - c2*s1*s3)*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/2))/2 - (d5*ml4*s4*(c3*s1 + c1*c2*s3)*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4))/4 - (5*d5*ml5*s4*(c3*s1 + c1*c2*s3)*((5*d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4))/4 - (d5*mm5*s4*(c3*s1 + c1*c2*s3)*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/2))/2 - d5^2*ml6*s4*(c3*s1 + c1*c2*s3)*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - d5^2*mm6*s4*(c3*s1 + c1*c2*s3)*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - d5^2*mm7*s4*(c3*s1 + c1*c2*s3)*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) + d5*ml6*s2*s3*s4*(d5*c2*s4 - d5*c3*c4*s2) + d5*mm6*s2*s3*s4*(d5*c2*s4 - d5*c3*c4*s2) + d5*mm7*s2*s3*s4*(d5*c2*s4 - d5*c3*c4*s2) + (d5^2*ml4*s2*s3*s4*(c2*s4 - c3*c4*s2))/16 + (25*d5^2*ml5*s2*s3*s4*(c2*s4 - c3*c4*s2))/16 + (d5^2*mm5*s2*s3*s4*(c2*s4 - c3*c4*s2))/4;
B(4,4)=ml7*(d5*c3*c4*s2 - d5*c2*s4 - (9*d7*c2*c6*s4)/8 + (9*d7*c3*c4*c6*s2)/8 + (9*d7*c2*c4*c5*s6)/8 + (9*d7*c3*c5*s2*s4*s6)/8)^2 + ml7*((c3*s1 + c1*c2*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8))^2 + ml6*(d5*c2*s4 - d5*c3*c4*s2)^2 + mm6*(d5*c2*s4 - d5*c3*c4*s2)^2 + mm7*(d5*c2*s4 - d5*c3*c4*s2)^2 + ml7*((c1*c3 - c2*s1*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4)))^2 - (c3*s1 + c1*c2*s3)*(Il4(1,2)*(c1*c3 - c2*s1*s3) - Il4(1,1)*(c3*s1 + c1*c2*s3) + Il4(1,3)*s2*s3) - (c3*s1 + c1*c2*s3)*(Il5(1,2)*(c1*c3 - c2*s1*s3) - Il5(1,1)*(c3*s1 + c1*c2*s3) + Il5(1,3)*s2*s3) - (c3*s1 + c1*c2*s3)*(Il6(1,2)*(c1*c3 - c2*s1*s3) - Il6(1,1)*(c3*s1 + c1*c2*s3) + Il6(1,3)*s2*s3) - (c3*s1 + c1*c2*s3)*(Il7(1,2)*(c1*c3 - c2*s1*s3) - Il7(1,1)*(c3*s1 + c1*c2*s3) + Il7(1,3)*s2*s3) + (c1*c3 - c2*s1*s3)*(Il4(2,2)*(c1*c3 - c2*s1*s3) - Il4(1,2)*(c3*s1 + c1*c2*s3) + Il4(2,3)*s2*s3) + (c1*c3 - c2*s1*s3)*(Il5(2,2)*(c1*c3 - c2*s1*s3) - Il5(1,2)*(c3*s1 + c1*c2*s3) + Il5(2,3)*s2*s3) + (c1*c3 - c2*s1*s3)*(Il6(2,2)*(c1*c3 - c2*s1*s3) - Il6(1,2)*(c3*s1 + c1*c2*s3) + Il6(2,3)*s2*s3) + (c1*c3 - c2*s1*s3)*(Il7(2,2)*(c1*c3 - c2*s1*s3) - Il7(1,2)*(c3*s1 + c1*c2*s3) + Il7(2,3)*s2*s3) + ml6*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))^2 + ml4*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4)^2 + ml5*((5*d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/4)^2 + mm6*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))^2 + mm7*(d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4) + d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))^2 + mm5*((d5*(c3*s1 + c1*c2*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4))/2)^2 + ml4*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4)^2 + ml5*((5*d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/4 + (5*d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/4)^2 + mm5*((d5*(c1*c3 - c2*s1*s3)*(c2*c4 + c3*s2*s4))/2 + (d5*s2*s3*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))/2)^2 + s2*s3*(Il4(2,3)*(c1*c3 - c2*s1*s3) - Il4(1,3)*(c3*s1 + c1*c2*s3) + Il4(3,3)*s2*s3) + s2*s3*(Il5(2,3)*(c1*c3 - c2*s1*s3) - Il5(1,3)*(c3*s1 + c1*c2*s3) + Il5(3,3)*s2*s3) + s2*s3*(Il6(2,3)*(c1*c3 - c2*s1*s3) - Il6(1,3)*(c3*s1 + c1*c2*s3) + Il6(3,3)*s2*s3) + s2*s3*(Il7(2,3)*(c1*c3 - c2*s1*s3) - Il7(1,3)*(c3*s1 + c1*c2*s3) + Il7(3,3)*s2*s3) + Im5*s2^2*s3^2 + Im6*s2^2*s3^2 + Im7*s2^2*s3^2 + (d5^2*ml4*(c2*s4 - c3*c4*s2)^2)/16 + (25*d5^2*ml5*(c2*s4 - c3*c4*s2)^2)/16 + (d5^2*mm5*(c2*s4 - c3*c4*s2)^2)/4 + d5^2*ml6*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)^2 + d5^2*mm6*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)^2 + d5^2*mm7*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4)^2;
B(5,4)=(c3*s1 + c1*c2*s3)*(Il5(1,3)*(c2*c4 + c3*s2*s4) + Il5(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il5(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + (c3*s1 + c1*c2*s3)*(Il6(1,3)*(c2*c4 + c3*s2*s4) + Il6(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + (c3*s1 + c1*c2*s3)*(Il7(1,3)*(c2*c4 + c3*s2*s4) + Il7(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - (c1*c3 - c2*s1*s3)*(Il5(2,3)*(c2*c4 + c3*s2*s4) + Il5(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il5(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - (c1*c3 - c2*s1*s3)*(Il6(2,3)*(c2*c4 + c3*s2*s4) + Il6(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - (c1*c3 - c2*s1*s3)*(Il7(2,3)*(c2*c4 + c3*s2*s4) + Il7(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - s2*s3*(Il5(3,3)*(c2*c4 + c3*s2*s4) + Il5(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il5(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - s2*s3*(Il6(3,3)*(c2*c4 + c3*s2*s4) + Il6(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - s2*s3*(Il7(3,3)*(c2*c4 + c3*s2*s4) + Il7(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - Im6*s2*s3*(c2*c4 + c3*s2*s4) - Im7*s2*s3*(c2*c4 + c3*s2*s4) - Im5*kr5*s2*s3 + (9*d7*ml7*s6*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5)*(d5*c3*c4*s2 - d5*c2*s4 - (9*d7*c2*c6*s4)/8 + (9*d7*c3*c4*c6*s2)/8 + (9*d7*c2*c4*c5*s6)/8 + (9*d7*c3*c5*s2*s4*s6)/8))/8 + (9*d7*ml7*s6*((c3*s1 + c1*c2*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8))*(c2*c5*s1*s3 - c1*c3*c5 + c1*c4*s3*s5 + s1*s2*s4*s5 + c2*c3*c4*s1*s5))/8 + (9*d7*ml7*s6*((c1*c3 - c2*s1*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4)))*(c3*c5*s1 + c1*c2*c5*s3 + c1*s2*s4*s5 - c4*s1*s3*s5 + c1*c2*c3*c4*s5))/8;
B(6,4)=(c1*c3 - c2*s1*s3)*(Il6(2,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,2)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(2,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - (c3*s1 + c1*c2*s3)*(Il7(1,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,1)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(1,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - (c3*s1 + c1*c2*s3)*(Il6(1,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,1)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(1,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) + (c1*c3 - c2*s1*s3)*(Il7(2,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,2)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(2,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - ml7*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 - (9*d7*(s5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) - c5*(c1*c3 - c2*s1*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*((c1*c3 - c2*s1*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))) - ml7*((c3*s1 + c1*c2*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8))*((9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 + (9*d7*(s5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) + c5*(c3*s1 + c1*c2*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8) + s2*s3*(Il6(3,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,3)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(2,3)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) + s2*s3*(Il7(3,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,3)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(2,3)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) + Im7*s2*s3*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - (9*d7*ml7*(c2*c4*s6 - c2*c5*c6*s4 + c3*s2*s4*s6 - c6*s2*s3*s5 + c3*c4*c5*c6*s2)*(d5*c3*c4*s2 - d5*c2*s4 - (9*d7*c2*c6*s4)/8 + (9*d7*c3*c4*c6*s2)/8 + (9*d7*c2*c4*c5*s6)/8 + (9*d7*c3*c5*s2*s4*s6)/8))/8;
B(7,4)=(c3*s1 + c1*c2*s3)*(Il7(1,1)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(1,2)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(1,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) - (c1*c3 - c2*s1*s3)*(Il7(1,2)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(2,2)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(2,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) - s2*s3*(Il7(1,3)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(2,3)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(3,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) - Im7*kr7*s2*s3;
B(1,5)=Il5(3,3)*(c2*c4 + c3*s2*s4) + Il6(3,3)*(c2*c4 + c3*s2*s4) + Il7(3,3)*(c2*c4 + c3*s2*s4) + Im6*(c2*c4 + c3*s2*s4) + Im7*(c2*c4 + c3*s2*s4) + Im5*kr5 + Il5(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) + Il6(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) + Il7(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il5(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - Il6(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - Il7(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - (9*d7*ml7*s6*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8 + d3*c1*s2)*(c2*c5*s1*s3 - c1*c3*c5 + c1*c4*s3*s5 + s1*s2*s4*s5 + c2*c3*c4*s1*s5))/8 - (9*d7*ml7*s6*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - d3*s1*s2)*(c3*c5*s1 + c1*c2*c5*s3 + c1*s2*s4*s5 - c4*s1*s3*s5 + c1*c2*c3*c4*s5))/8;
B(2,5)=(c2*c4 + c3*s2*s4)*(Il5(2,3)*c1 - Il5(1,3)*s1) + (c2*c4 + c3*s2*s4)*(Il6(2,3)*c1 - Il6(1,3)*s1) + (c2*c4 + c3*s2*s4)*(Il7(2,3)*c1 - Il7(1,3)*s1) + (Il5(1,2)*c1 - Il5(1,1)*s1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) + (Il6(1,2)*c1 - Il6(1,1)*s1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) + (Il7(1,2)*c1 - Il7(1,1)*s1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - (s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il5(2,2)*c1 - Il5(1,2)*s1) - (s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il6(2,2)*c1 - Il6(1,2)*s1) - (s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il7(2,2)*c1 - Il7(1,2)*s1) - (9*d7*ml7*s6*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4 + (9*d7*c4*c6*s2)/8 - (9*d7*c2*c3*c6*s4)/8 - (9*d7*c2*s3*s5*s6)/8 + (9*d7*c5*s2*s4*s6)/8 + (9*d7*c2*c3*c4*c5*s6)/8))/8 - (9*d7*ml7*c1*s6*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)*(c3*c5*s1 + c1*c2*c5*s3 + c1*s2*s4*s5 - c4*s1*s3*s5 + c1*c2*c3*c4*s5))/8 - (9*d7*ml7*s1*s6*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2)*(c2*c5*s1*s3 - c1*c3*c5 + c1*c4*s3*s5 + s1*s2*s4*s5 + c2*c3*c4*s1*s5))/8;
B(3,5)=(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2)*(Il5(1,3)*c2 + Il5(1,1)*c1*s2 + Il5(1,2)*s1*s2) + (s4*(s1*s3 - c1*c2*c3) + c1*c4*s2)*(Il6(1,3)*c2 + Il6(1,1)*c1*s2 + Il6(1,2)*s1*s2) + (s4*(s1*s3 - c1*c2*c3) + c1*c4*s2)*(Il7(1,3)*c2 + Il7(1,1)*c1*s2 + Il7(1,2)*s1*s2) - (s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il5(2,3)*c2 + Il5(1,2)*c1*s2 + Il5(2,2)*s1*s2) - (s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il6(2,3)*c2 + Il6(1,2)*c1*s2 + Il6(2,2)*s1*s2) - (s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il7(2,3)*c2 + Il7(1,2)*c1*s2 + Il7(2,2)*s1*s2) + (c2*c4 + c3*s2*s4)*(Il5(3,3)*c2 + Il5(1,3)*c1*s2 + Il5(2,3)*s1*s2) + (c2*c4 + c3*s2*s4)*(Il6(3,3)*c2 + Il6(1,3)*c1*s2 + Il6(2,3)*s1*s2) + (c2*c4 + c3*s2*s4)*(Il7(3,3)*c2 + Il7(1,3)*c1*s2 + Il7(2,3)*s1*s2) + Im6*c2*(c2*c4 + c3*s2*s4) + Im7*c2*(c2*c4 + c3*s2*s4) + Im5*kr5*c2 + (9*d7*ml7*s6*(c2*c5*s1*s3 - c1*c3*c5 + c1*c4*s3*s5 + s1*s2*s4*s5 + c2*c3*c4*s1*s5)*(d5*c1*c3*s4 + (9*d7*c1*c3*c6*s4)/8 - d5*c2*s1*s3*s4 + (9*d7*c1*s3*s5*s6)/8 - (9*d7*c2*c6*s1*s3*s4)/8 + (9*d7*c2*c3*s1*s5*s6)/8 - (9*d7*c1*c3*c4*c5*s6)/8 + (9*d7*c2*c4*c5*s1*s3*s6)/8))/8 - (9*d7*ml7*s6*(c3*c5*s1 + c1*c2*c5*s3 + c1*s2*s4*s5 - c4*s1*s3*s5 + c1*c2*c3*c4*s5)*(d5*c3*s1*s4 + d5*c1*c2*s3*s4 + (9*d7*c3*c6*s1*s4)/8 + (9*d7*s1*s3*s5*s6)/8 + (9*d7*c1*c2*c6*s3*s4)/8 - (9*d7*c1*c2*c3*s5*s6)/8 - (9*d7*c3*c4*c5*s1*s6)/8 - (9*d7*c1*c2*c4*c5*s3*s6)/8))/8 - (9*d7*ml7*s2*s6*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5)*(8*d5*s3*s4 + 9*d7*c6*s3*s4 - 9*d7*c3*s5*s6 - 9*d7*c4*c5*s3*s6))/64;
B(4,5)=(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il5(2,2)*(c1*c3 - c2*s1*s3) - Il5(1,2)*(c3*s1 + c1*c2*s3) + Il5(2,3)*s2*s3) - (s4*(s1*s3 - c1*c2*c3) + c1*c4*s2)*(Il6(1,2)*(c1*c3 - c2*s1*s3) - Il6(1,1)*(c3*s1 + c1*c2*s3) + Il6(1,3)*s2*s3) - (s4*(s1*s3 - c1*c2*c3) + c1*c4*s2)*(Il7(1,2)*(c1*c3 - c2*s1*s3) - Il7(1,1)*(c3*s1 + c1*c2*s3) + Il7(1,3)*s2*s3) - (s4*(s1*s3 - c1*c2*c3) + c1*c4*s2)*(Il5(1,2)*(c1*c3 - c2*s1*s3) - Il5(1,1)*(c3*s1 + c1*c2*s3) + Il5(1,3)*s2*s3) + (s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il6(2,2)*(c1*c3 - c2*s1*s3) - Il6(1,2)*(c3*s1 + c1*c2*s3) + Il6(2,3)*s2*s3) + (s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il7(2,2)*(c1*c3 - c2*s1*s3) - Il7(1,2)*(c3*s1 + c1*c2*s3) + Il7(2,3)*s2*s3) - (c2*c4 + c3*s2*s4)*(Il5(2,3)*(c1*c3 - c2*s1*s3) - Il5(1,3)*(c3*s1 + c1*c2*s3) + Il5(3,3)*s2*s3) - (c2*c4 + c3*s2*s4)*(Il6(2,3)*(c1*c3 - c2*s1*s3) - Il6(1,3)*(c3*s1 + c1*c2*s3) + Il6(3,3)*s2*s3) - (c2*c4 + c3*s2*s4)*(Il7(2,3)*(c1*c3 - c2*s1*s3) - Il7(1,3)*(c3*s1 + c1*c2*s3) + Il7(3,3)*s2*s3) - Im6*s2*s3*(c2*c4 + c3*s2*s4) - Im7*s2*s3*(c2*c4 + c3*s2*s4) - Im5*kr5*s2*s3 + (9*d7*ml7*s6*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5)*(d5*c3*c4*s2 - d5*c2*s4 - (9*d7*c2*c6*s4)/8 + (9*d7*c3*c4*c6*s2)/8 + (9*d7*c2*c4*c5*s6)/8 + (9*d7*c3*c5*s2*s4*s6)/8))/8 + (9*d7*ml7*s6*((c3*s1 + c1*c2*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8))*(c2*c5*s1*s3 - c1*c3*c5 + c1*c4*s3*s5 + s1*s2*s4*s5 + c2*c3*c4*s1*s5))/8 + (9*d7*ml7*s6*((c1*c3 - c2*s1*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4)))*(c3*c5*s1 + c1*c2*c5*s3 + c1*s2*s4*s5 - c4*s1*s3*s5 + c1*c2*c3*c4*s5))/8;
B(5,5)=(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2)*(Il5(1,3)*(c2*c4 + c3*s2*s4) + Il5(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il5(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + (s4*(s1*s3 - c1*c2*c3) + c1*c4*s2)*(Il6(1,3)*(c2*c4 + c3*s2*s4) + Il6(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + (s4*(s1*s3 - c1*c2*c3) + c1*c4*s2)*(Il7(1,3)*(c2*c4 + c3*s2*s4) + Il7(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - (s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il5(2,3)*(c2*c4 + c3*s2*s4) + Il5(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il5(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - (s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il6(2,3)*(c2*c4 + c3*s2*s4) + Il6(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - (s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il7(2,3)*(c2*c4 + c3*s2*s4) + Il7(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + Im6*(c2*c4 + c3*s2*s4)^2 + Im7*(c2*c4 + c3*s2*s4)^2 + Im5*kr5^2 + (c2*c4 + c3*s2*s4)*(Il5(3,3)*(c2*c4 + c3*s2*s4) + Il5(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il5(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + (c2*c4 + c3*s2*s4)*(Il6(3,3)*(c2*c4 + c3*s2*s4) + Il6(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + (c2*c4 + c3*s2*s4)*(Il7(3,3)*(c2*c4 + c3*s2*s4) + Il7(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + (81*d7^2*ml7*s6^2*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5)^2)/64 + (81*d7^2*ml7*s6^2*(c3*c5*s1 + c1*c2*c5*s3 + c1*s2*s4*s5 - c4*s1*s3*s5 + c1*c2*c3*c4*s5)^2)/64 + (81*d7^2*ml7*s6^2*(c2*c5*s1*s3 - c1*c3*c5 + c1*c4*s3*s5 + s1*s2*s4*s5 + c2*c3*c4*s1*s5)^2)/64;
B(6,5)=(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il6(2,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,2)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(2,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - (s4*(s1*s3 - c1*c2*c3) + c1*c4*s2)*(Il7(1,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,1)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(1,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - (s4*(s1*s3 - c1*c2*c3) + c1*c4*s2)*(Il6(1,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,1)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(1,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) + (s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il7(2,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,2)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(2,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - (c2*c4 + c3*s2*s4)*(Il6(3,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,3)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(2,3)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - (c2*c4 + c3*s2*s4)*(Il7(3,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,3)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(2,3)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - Im7*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)*(c2*c4 + c3*s2*s4) - (81*d7^2*ml7*s6*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5)*(c2*c4*s6 - c2*c5*c6*s4 + c3*s2*s4*s6 - c6*s2*s3*s5 + c3*c4*c5*c6*s2))/64 - (9*d7*ml7*s6*((9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 + (9*d7*(s5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) + c5*(c3*s1 + c1*c2*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*(c2*c5*s1*s3 - c1*c3*c5 + c1*c4*s3*s5 + s1*s2*s4*s5 + c2*c3*c4*s1*s5))/8 - (9*d7*ml7*s6*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 - (9*d7*(s5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) - c5*(c1*c3 - c2*s1*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*(c3*c5*s1 + c1*c2*c5*s3 + c1*s2*s4*s5 - c4*s1*s3*s5 + c1*c2*c3*c4*s5))/8;
B(7,5)=(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2)*(Il7(1,1)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(1,2)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(1,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) - (s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)*(Il7(1,2)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(2,2)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(2,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) + (c2*c4 + c3*s2*s4)*(Il7(1,3)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(2,3)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(3,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) + Im7*kr7*(c2*c4 + c3*s2*s4);
B(1,6)=Il6(1,3)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) - Il7(3,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Im7*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(3,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) + Il7(1,3)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) - Il6(2,3)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3)) - Il7(2,3)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3)) + ml7*((9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 + (9*d7*(s5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) + c5*(c3*s1 + c1*c2*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8 + d3*c1*s2) + ml7*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 - (9*d7*(s5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) - c5*(c1*c3 - c2*s1*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - d3*s1*s2);
B(2,6)=(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3))*(Il6(1,2)*c1 - Il6(1,1)*s1) - (s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))*(Il7(2,2)*c1 - Il7(1,2)*s1) - (s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)*(Il6(2,3)*c1 - Il6(1,3)*s1) - (s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)*(Il7(2,3)*c1 - Il7(1,3)*s1) - (s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))*(Il6(2,2)*c1 - Il6(1,2)*s1) + (s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3))*(Il7(1,2)*c1 - Il7(1,1)*s1) + (9*d7*ml7*(c2*c4*s6 - c2*c5*c6*s4 + c3*s2*s4*s6 - c6*s2*s3*s5 + c3*c4*c5*c6*s2)*(d3*s2 + d5*c4*s2 - d5*c2*c3*s4 + (9*d7*c4*c6*s2)/8 - (9*d7*c2*c3*c6*s4)/8 - (9*d7*c2*s3*s5*s6)/8 + (9*d7*c5*s2*s4*s6)/8 + (9*d7*c2*c3*c4*c5*s6)/8))/8 + ml7*s1*((9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 + (9*d7*(s5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) + c5*(c3*s1 + c1*c2*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2) + ml7*c1*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 - (9*d7*(s5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) - c5*(c1*c3 - c2*s1*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4) + d3*c2);
B(3,6)=(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3))*(Il6(1,3)*c2 + Il6(1,1)*c1*s2 + Il6(1,2)*s1*s2) - (s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)*(Il7(3,3)*c2 + Il7(1,3)*c1*s2 + Il7(2,3)*s1*s2) - (s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)*(Il6(3,3)*c2 + Il6(1,3)*c1*s2 + Il6(2,3)*s1*s2) + (s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3))*(Il7(1,3)*c2 + Il7(1,1)*c1*s2 + Il7(1,2)*s1*s2) - (s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))*(Il6(2,3)*c2 + Il6(1,2)*c1*s2 + Il6(2,2)*s1*s2) - (s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))*(Il7(2,3)*c2 + Il7(1,2)*c1*s2 + Il7(2,2)*s1*s2) - ml7*((9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 + (9*d7*(s5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) + c5*(c3*s1 + c1*c2*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*(d5*c1*c3*s4 + (9*d7*c1*c3*c6*s4)/8 - d5*c2*s1*s3*s4 + (9*d7*c1*s3*s5*s6)/8 - (9*d7*c2*c6*s1*s3*s4)/8 + (9*d7*c2*c3*s1*s5*s6)/8 - (9*d7*c1*c3*c4*c5*s6)/8 + (9*d7*c2*c4*c5*s1*s3*s6)/8) + ml7*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 - (9*d7*(s5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) - c5*(c1*c3 - c2*s1*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*(d5*c3*s1*s4 + d5*c1*c2*s3*s4 + (9*d7*c3*c6*s1*s4)/8 + (9*d7*s1*s3*s5*s6)/8 + (9*d7*c1*c2*c6*s3*s4)/8 - (9*d7*c1*c2*c3*s5*s6)/8 - (9*d7*c3*c4*c5*s1*s6)/8 - (9*d7*c1*c2*c4*c5*s3*s6)/8) - Im7*c2*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) + (9*d7*ml7*s2*(8*d5*s3*s4 + 9*d7*c6*s3*s4 - 9*d7*c3*s5*s6 - 9*d7*c4*c5*s3*s6)*(c2*c4*s6 - c2*c5*c6*s4 + c3*s2*s4*s6 - c6*s2*s3*s5 + c3*c4*c5*c6*s2))/64;
B(4,6)=(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)*(Il6(2,3)*(c1*c3 - c2*s1*s3) - Il6(1,3)*(c3*s1 + c1*c2*s3) + Il6(3,3)*s2*s3) + (s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)*(Il7(2,3)*(c1*c3 - c2*s1*s3) - Il7(1,3)*(c3*s1 + c1*c2*s3) + Il7(3,3)*s2*s3) - (s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3))*(Il6(1,2)*(c1*c3 - c2*s1*s3) - Il6(1,1)*(c3*s1 + c1*c2*s3) + Il6(1,3)*s2*s3) - (s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3))*(Il7(1,2)*(c1*c3 - c2*s1*s3) - Il7(1,1)*(c3*s1 + c1*c2*s3) + Il7(1,3)*s2*s3) + (s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))*(Il6(2,2)*(c1*c3 - c2*s1*s3) - Il6(1,2)*(c3*s1 + c1*c2*s3) + Il6(2,3)*s2*s3) + (s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))*(Il7(2,2)*(c1*c3 - c2*s1*s3) - Il7(1,2)*(c3*s1 + c1*c2*s3) + Il7(2,3)*s2*s3) - ml7*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 - (9*d7*(s5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) - c5*(c1*c3 - c2*s1*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*((c1*c3 - c2*s1*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3))))/8 + d5*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4))) - ml7*((c3*s1 + c1*c2*s3)*((9*d7*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8 + d5*(c2*c4 + c3*s2*s4)) + s2*s3*(d5*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + (9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3))))/8))*((9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 + (9*d7*(s5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) + c5*(c3*s1 + c1*c2*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8) + Im7*s2*s3*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - (9*d7*ml7*(c2*c4*s6 - c2*c5*c6*s4 + c3*s2*s4*s6 - c6*s2*s3*s5 + c3*c4*c5*c6*s2)*(d5*c3*c4*s2 - d5*c2*s4 - (9*d7*c2*c6*s4)/8 + (9*d7*c3*c4*c6*s2)/8 + (9*d7*c2*c4*c5*s6)/8 + (9*d7*c3*c5*s2*s4*s6)/8))/8;
B(5,6)=(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3))*(Il6(1,3)*(c2*c4 + c3*s2*s4) + Il6(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - (s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)*(Il7(3,3)*(c2*c4 + c3*s2*s4) + Il7(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - (s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)*(Il6(3,3)*(c2*c4 + c3*s2*s4) + Il6(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + (s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3))*(Il7(1,3)*(c2*c4 + c3*s2*s4) + Il7(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - (s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))*(Il6(2,3)*(c2*c4 + c3*s2*s4) + Il6(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il6(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - (s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))*(Il7(2,3)*(c2*c4 + c3*s2*s4) + Il7(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - Im7*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)*(c2*c4 + c3*s2*s4) - (81*d7^2*ml7*s6*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5)*(c2*c4*s6 - c2*c5*c6*s4 + c3*s2*s4*s6 - c6*s2*s3*s5 + c3*c4*c5*c6*s2))/64 - (9*d7*ml7*s6*((9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 + (9*d7*(s5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) + c5*(c3*s1 + c1*c2*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*(c2*c5*s1*s3 - c1*c3*c5 + c1*c4*s3*s5 + s1*s2*s4*s5 + c2*c3*c4*s1*s5))/8 - (9*d7*ml7*s6*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 - (9*d7*(s5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) - c5*(c1*c3 - c2*s1*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)*(c3*c5*s1 + c1*c2*c5*s3 + c1*s2*s4*s5 - c4*s1*s3*s5 + c1*c2*c3*c4*s5))/8;
B(6,6)=Im7*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)^2 + ml7*((9*d7*(c6*(s1*s3*s4 + c1*c4*s2 - c1*c2*c3*s4) + s6*(c5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) - s5*(c3*s1 + c1*c2*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 + (9*d7*(s5*(c1*s2*s4 - c4*s1*s3 + c1*c2*c3*c4) + c5*(c3*s1 + c1*c2*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)^2 + (s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)*(Il6(3,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,3)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(2,3)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) + (s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)*(Il7(3,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,3)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(2,3)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) + ml7*((9*d7*(c6*(c1*s3*s4 - c4*s1*s2 + c2*c3*s1*s4) - s6*(c5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) + s5*(c1*c3 - c2*s1*s3)))*(c5*s2*s3 - c2*s4*s5 + c3*c4*s2*s5))/8 - (9*d7*(s5*(s1*s2*s4 + c1*c4*s3 + c2*c3*c4*s1) - c5*(c1*c3 - c2*s1*s3))*(s6*(s2*s3*s5 + c2*c5*s4 - c3*c4*c5*s2) + c6*(c2*c4 + c3*s2*s4)))/8)^2 - (s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3))*(Il6(1,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,1)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(1,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - (s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3))*(Il7(1,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,1)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(1,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) + (s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))*(Il6(2,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il6(1,2)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il6(2,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) + (s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))*(Il7(2,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,2)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(2,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) + (81*d7^2*ml7*(c2*c4*s6 - c2*c5*c6*s4 + c3*s2*s4*s6 - c6*s2*s3*s5 + c3*c4*c5*c6*s2)^2)/64;
B(7,6)=(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3))*(Il7(1,1)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(1,2)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(1,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) - (s5*(c2*s4 - c3*c4*s2) - c5*s2*s3)*(Il7(1,3)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(2,3)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(3,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) - (s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))*(Il7(1,2)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(2,2)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(2,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) - Im7*kr7*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3);
B(1,7)=Im7*kr7 + Il7(1,3)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(2,3)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(3,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4));
B(2,7)=(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))*(Il7(2,3)*c1 - Il7(1,3)*s1) + (Il7(1,2)*c1 - Il7(1,1)*s1)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - (c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3)))*(Il7(2,2)*c1 - Il7(1,2)*s1);
B(3,7)=(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3)))*(Il7(1,3)*c2 + Il7(1,1)*c1*s2 + Il7(1,2)*s1*s2) - (c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3)))*(Il7(2,3)*c2 + Il7(1,2)*c1*s2 + Il7(2,2)*s1*s2) + (s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))*(Il7(3,3)*c2 + Il7(1,3)*c1*s2 + Il7(2,3)*s1*s2) + Im7*kr7*c2;
B(4,7)=(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3)))*(Il7(2,2)*(c1*c3 - c2*s1*s3) - Il7(1,2)*(c3*s1 + c1*c2*s3) + Il7(2,3)*s2*s3) - (c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3)))*(Il7(1,2)*(c1*c3 - c2*s1*s3) - Il7(1,1)*(c3*s1 + c1*c2*s3) + Il7(1,3)*s2*s3) - (s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))*(Il7(2,3)*(c1*c3 - c2*s1*s3) - Il7(1,3)*(c3*s1 + c1*c2*s3) + Il7(3,3)*s2*s3) - Im7*kr7*s2*s3;
B(5,7)=(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3)))*(Il7(1,3)*(c2*c4 + c3*s2*s4) + Il7(1,1)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(1,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) - (c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3)))*(Il7(2,3)*(c2*c4 + c3*s2*s4) + Il7(1,2)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(2,2)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + (s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))*(Il7(3,3)*(c2*c4 + c3*s2*s4) + Il7(1,3)*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - Il7(2,3)*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2)) + Im7*kr7*(c2*c4 + c3*s2*s4);
B(6,7)=(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3)))*(Il7(2,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,2)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(2,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - (c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3)))*(Il7(1,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,1)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(1,2)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - (s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))*(Il7(3,3)*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3) - Il7(1,3)*(s5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) - c5*(c3*s1 + c1*c2*s3)) + Il7(2,3)*(s5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) - c5*(c1*c3 - c2*s1*s3))) - Im7*kr7*(s5*(c2*s4 - c3*c4*s2) - c5*s2*s3);
B(7,7)=(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3)))*(Il7(1,1)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(1,2)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(1,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) - (c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3)))*(Il7(1,2)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(2,2)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(2,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) + (s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))*(Il7(1,3)*(c6*(s4*(s1*s3 - c1*c2*c3) + c1*c4*s2) - s6*(c5*(c4*(s1*s3 - c1*c2*c3) - c1*s2*s4) + s5*(c3*s1 + c1*c2*s3))) - Il7(2,3)*(c6*(s4*(c1*s3 + c2*c3*s1) - c4*s1*s2) - s6*(c5*(c4*(c1*s3 + c2*c3*s1) + s1*s2*s4) + s5*(c1*c3 - c2*s1*s3))) + Il7(3,3)*(s6*(c5*(c2*s4 - c3*c4*s2) + s2*s3*s5) + c6*(c2*c4 + c3*s2*s4))) + Im7*kr7^2;
end